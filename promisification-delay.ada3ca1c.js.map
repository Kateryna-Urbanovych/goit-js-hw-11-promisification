{"version":3,"sources":["js/promisification-delay.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";AAGA,IAAMA,EAAQ,SAAAC,GACH,OAAA,IAAIC,QAAQ,SAACC,GAChBC,WAAW,WACPD,EAAQF,IACTA,MAILI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ","file":"promisification-delay.ada3ca1c.js","sourceRoot":"..\\src","sourcesContent":["                            //  Задание 1\r\n// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" через ms миллисекунд. Значением исполнившегося промиса должно быть то кол-во миллисекунд которое передали во время вызова функции delay.\r\n\r\nconst delay = ms => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(ms);\r\n        }, ms)\r\n    })\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms"]}